type Cliente {
        id: ID 
        nombre: String
        apellido: String
        empresa: String
        emails: [Email]
        edad : Int
        tipo: TipoCliente
        pedidos: [Pedido]
    }

    type Email {
        email: String
    }

    type Pedido {
        productos: String
        precio : Int
    }

    """ Asigna la categoria del cliente """
    enum TipoCliente {
        BASICO
        PREMIUM
    }

    type Producto {
        id: ID
        nombre: String
        precio: Int
        stock: Int
    }

    type Query {
        getClientes (limite : Int, offset:Int) : [Cliente]
        getCliente(id: ID) : Cliente
        totalClientes : String

        #Productos
        obtenerProductos (limite: Int, offset: Int): [Producto]
        obtenerProducto (id: ID): Producto
    }
      
    input PedidoInput {
        productos: String
        precio : Int
    }
    
    input EmailInput {
        email: String
    }

    """ Campos para los clientes Nuevos """
    input ClienteInput {
        id: ID 
        nombre: String!
        apellido: String!
        empresa: String!
        emails: [EmailInput]!
        edad : Int!
        tipo: TipoCliente!
        pedidos: [PedidoInput]
    }
    input ProductoInput {
        id: ID
        nombre: String!
        precio: Int!
        stock: Int!
    }

    """ Mutation para crear nuevos clientes """
    type Mutation {
        #Nombre del Resolver , input de datos y valor que retorna
        """ Te permite Crear Nuevos Clientes """
        crearCliente( input: ClienteInput ): Cliente
        actualizarCliente(input: ClienteInput ) : Cliente
        eliminarCliente(id : ID): String

        #Productos
        nuevoProducto(input: ProductoInput): Producto 
        actualizarProducto (input : ProductoInput): Producto
        eliminarProducto(id : ID!): String
    }